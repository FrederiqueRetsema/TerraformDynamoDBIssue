Current date/time:
Fri Apr  3 18:29:14 UTC 2020
Version Terraform:
Terraform v0.12.24
Version pip3
pip 9.0.3 from /usr/lib/python3.6/site-packages (python 3.6)
aws CLI version
aws-cli/2.0.6 Python/3.7.3 Linux/3.10.0-1062.18.1.el7.x86_64 botocore/2.0.0dev10
Version boto3
1.12.35
-------------------
python3 addtable.sh
-------------------
{'TableDescription': {'AttributeDefinitions': [{'AttributeName': 'hashKey', 'AttributeType': 'S'}, {'AttributeName': 'rangeKey', 'AttributeType': 'S'}], 'TableName': 'mytable_BT', 'KeySchema': [{'AttributeName': 'hashKey', 'KeyType': 'HASH'}, {'AttributeName': 'rangeKey', 'KeyType': 'RANGE'}], 'TableStatus': 'CREATING', 'CreationDateTime': datetime.datetime(2020, 4, 3, 18, 29, 17, 418000, tzinfo=tzlocal()), 'ProvisionedThroughput': {'NumberOfDecreasesToday': 0, 'ReadCapacityUnits': 1, 'WriteCapacityUnits': 1}, 'TableSizeBytes': 0, 'ItemCount': 0, 'TableArn': 'arn:aws:dynamodb:eu-west-1:300577164517:table/mytable_BT', 'TableId': 'dcc6efc2-9a39-436a-b518-09e2473c1bb4'}, 'ResponseMetadata': {'RequestId': 'CE3FDQ9MJJERBDA3G0LE8L0MAVVV4KQNSO5AEMVJF66Q9ASUAAJG', 'HTTPStatusCode': 200, 'HTTPHeaders': {'server': 'Server', 'date': 'Fri, 03 Apr 2020 18:29:17 GMT', 'content-type': 'application/x-amz-json-1.0', 'content-length': '586', 'connection': 'keep-alive', 'x-amzn-requestid': 'CE3FDQ9MJJERBDA3G0LE8L0MAVVV4KQNSO5AEMVJF66Q9ASUAAJG', 'x-amz-crc32': '929973312'}, 'RetryAttempts': 0}}
-----------------------------------------------------
../../terraform init -var-file=../../terraform.tfvars
-----------------------------------------------------

[0m[1mInitializing the backend...[0m

[0m[1mInitializing provider plugins...[0m
- Checking for available provider plugins...
- Downloading plugin for provider "aws" (hashicorp/aws) 2.56.0...

The following providers do not have any version constraints in configuration,
so the latest version was installed.

To prevent automatic upgrades to new major versions that may contain breaking
changes, it is recommended to add version = "..." constraints to the
corresponding provider blocks in configuration, with the constraint strings
suggested below.

* provider.aws: version = "~> 2.56"

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
------------------------------------------------------------------------------
../../terraform plan -out=./terraform.tfplans -var-file=../../terraform.tfvars
------------------------------------------------------------------------------
[0m[1mRefreshing Terraform state in-memory prior to plan...[0m
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.
[0m
[0m[1mdata.aws_dynamodb_table.mytable: Refreshing state...[0m

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_dynamodb_table_item.mytable-item[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_dynamodb_table_item" "mytable-item" {
      [32m+[0m [0m[1m[0mhash_key[0m[0m   = "hashKey"
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mitem[0m[0m       = jsonencode(
            {
              [32m+[0m [0mhashKey  = {
                  [32m+[0m [0mS = "myhashkey"
                }
              [32m+[0m [0mnoKey    = {
                  [32m+[0m [0mS = "nokey"
                }
              [32m+[0m [0mrangeKey = {
                  [32m+[0m [0mS = "myrangekey"
                }
            }
        )
      [32m+[0m [0m[1m[0mtable_name[0m[0m = "mytable_BT"
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.[0m

------------------------------------------------------------------------

This plan was saved to: ./terraform.tfplans

To perform exactly these actions, run the following command to apply:
    terraform apply "./terraform.tfplans"

-------------------------------------------
../../terraform apply "./terraform.tfplans"
-------------------------------------------
[0m[1maws_dynamodb_table_item.mytable-item: Creating...[0m[0m
[31m
[1m[31mError: [0m[0m[1mError retrieving DynamoDB table item: ValidationException: The provided key element does not match the schema
	status code: 400, request id: S2IVIDILCL50IMC734MAK2FT1JVV4KQNSO5AEMVJF66Q9ASUAAJG[0m

[0m  on terraform_BT.tf line 30, in resource "aws_dynamodb_table_item" "mytable-item":
  30: resource "aws_dynamodb_table_item" "mytable-item" [4m{[0m
[0m
[0m[0m
